server {
    listen   80;

    client_max_body_size 50M;
    set $skip_cache 0;

    # Don't use the cache for logged in users or recent commenters
    if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
        set $skip_cache 1;
    }

    root /srv/www/webroot;

    index index.php index.html;

    # rewrite for multiple sub-domain sets
    if ( -d /srv/www/webroot/wordpress ) {
        rewrite (/wp-(admin|includes)/(.*))$ /wordpress$1 last;
        rewrite (/wp-[^/]*\.php)$ /wordpress$1 last;
        rewrite (/xmlrpc\.php)$ /wordpress$1 last;
    }

    # rewrite for multisite in subdirs, e.g. example.com/subsite1/
    # if the file doesn't exist for wp-admin/* or wp-*.php, try looking in the parent dir
    if ( !-e $request_filename ) {
        rewrite /wp-admin$ $scheme://$host$uri/ permanent;
        rewrite ^(/[^/]+)?(/wp-.*) $2 last;
        rewrite ^(/[^/]+)?(/.*\.php) $2 last;
    }

    # rewrite uploads to S3
    {% if 'deployment_s3_uploads_bucket' in grains %}
    rewrite ^/(wp-)?content(/uploads.*)$ https://{{ grains['deployment_s3_uploads_bucket'] }}.s3.amazonaws.com/{{ grains['deployment_s3_uploads_path'] }}$2 permanent;
    {% endif %}

    # Block all web requests to hidden directories
    location ~ /\. {
        deny all;
        return 404;
    }

    location ~* ^/(wp-)?content/(themes|plugins|mu-plugins|plugins-mu)/.+\.php$ {
        deny all;
        return 404;
    }

    # Block access to build scripts.
    location ~* /(Gruntfile\.js|package\.json|node_modules) {
        deny all;
        return 404;
    }

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    location ~* .(jpg|jpeg|png|gif|ico|css|js)$ {
        expires max;
    }

    location ~ s3://([^/]+)/(.+) {
        set $s3_bucket        '$1.s3.amazonaws.com';
        set $url_full         '$2';
        proxy_http_version     1.1;
        proxy_set_header       Host $s3_bucket;
        proxy_hide_header      x-amz-id-2;
        proxy_hide_header      x-amz-request-id;
        proxy_hide_header      Set-Cookie;
        proxy_ignore_headers   "Set-Cookie";
        proxy_buffering        off;
        proxy_intercept_errors on;
        {% if 'ec2_public-ipv4' in grains %}
        resolver               169.254.169.253 valid=300s;
        {% else %}
        resolver               127.0.0.1 valid=300s;
        {% endif %}
        resolver_timeout       10s;
        proxy_pass             https://$s3_bucket/$url_full;
        add_header             X-Source 'S3';
        expires                max;
    }

    # CORS for fonts
    location ~ \.(woff|eot|svg|ttf)(\?.+)?$ {

        expires max;
        add_header 'Access-Control-Allow-Origin' '*';

        if ( $request_method = 'OPTIONS' ) {
            return 204;
        }
    }  

    # php-fpm status page
    #
    location ~ ^/(status|ping)$ {
        access_log off;
        allow 127.0.0.1;
        deny all;
        include fastcgi_params;
        fastcgi_pass 127.0.0.1:9000;
    }

    # limit login attempt to wp-login.php for bots etc. Limit is 15/minute
    location ~* wp\-login\.php {
            limit_req   zone=two  burst=1 nodelay;
            fastcgi_pass 127.0.0.1:9000;
            # With php5-fpm:
            fastcgi_index index.php;

            fastcgi_param HTTPS $fastcgi_https;
            fastcgi_param SERVER_PORT $http_x_forwarded_port;

            include fastcgi_params;
    }

    # limit login attempt to xmlrpc.php for bots etc. Limit is 20/minute
    location ~* xmlrpc\.php {
        limit_req   zone=xmlrpc  burst=1 nodelay;
        fastcgi_pass 127.0.0.1:9000;
        # With php5-fpm:
        fastcgi_index index.php;

        fastcgi_param HTTPS $fastcgi_https;
        fastcgi_param SERVER_PORT $http_x_forwarded_port;

        include fastcgi_params;
    }

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    location ~ \.php$ {

        client_max_body_size 1G;
        
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini

        fastcgi_cache_bypass $skip_cache;
        fastcgi_no_cache $skip_cache;

        fastcgi_param HTTPS $fastcgi_https;
        fastcgi_param SERVER_PORT $http_x_forwarded_port;

        fastcgi_buffers 16 16k; 
        fastcgi_buffer_size 32k;
        
        # With php5-cgi alone:
        fastcgi_pass 127.0.0.1:9000;
        # With php5-fpm:
        fastcgi_index index.php;
        include fastcgi_params;
    }

    add_header X-Cached $upstream_cache_status;
    {% if 'ec2_instance-id' in grains %}
    add_header X-EC2-Instance-Id '{{ grains['ec2_instance-id'] }}';
    {% endif %}

}
